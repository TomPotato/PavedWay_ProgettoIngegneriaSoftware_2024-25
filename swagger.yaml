openapi: 3.0.4

info:
  title: Paved Way API
  description: API per la gestione degli eventi sulla mobilità della città di Trento.
  version: 1.0.0

servers:
  - url: http://localhost:3000/api/v1
    description: Server locale per lo sviluppo e il test.

tags:
  - name: Autenticazione
    description: >-
      Operazioni relative all'autenticazione degli utenti, 
      inclusi la registrazione e il login.
  - name: Utenti
    description: >-
      Operazioni relative alla gestione degli utenti, 
      inclusi la creazione, la visualizzazione e l'aggiornamento degli utenti.
  - name: Segnalazioni
    description: >-
      Operazioni relative alla gestione delle segnalazioni degli utenti, 
      inclusi la creazione, la visualizzazione e l'aggiornamento delle segnalazioni.
  - name: Cantieri
    description: >-
      Operazioni relative alla gestione dei cantieri, 
      inclusi la creazione, la visualizzazione e l'aggiornamento dei cantieri.
  - name: Percorsi
    description: >-
      Operazioni relative alla gestione dei percorsi, 
      inclusi la richiesta e la visualizzazione dei percorsi.

paths:
  /auth/register:
    post:
      tags:
        - Autenticazione
      summary: Registrazione di un nuovo utente cittadino
      description: >-
        Permette la registrazione di un nuovo utente come cittadino. 
        L'utente deve fornire nome utente, nome, cognome, email e password.
        Se la registrazione ha successo, l'utente cittadino viene creato e
        restituito insieme a un token JWT per l'autenticazione.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Citizen"
      responses:
        "201":
          description: Registrazione riuscita.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token JWT per l'autenticazione.
                  user:
                    allOf:
                      - $ref: "#/components/schemas/UserInfo"
                    description: Informazioni sull'utente registrato. Include nome utente, nome, cognome e ruolo.
        "400":
          description: Richiesta non valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: Nome utente o email già in uso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Errore interno del server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/login:
    post:
      tags:
        - Autenticazione
      summary: Autenticazione dell'utente
      description: >-
        Permette l'autenticazione di un utente esistente. 
        L'utente deve fornire nome utente e password.
        Se l'autenticazione ha successo, viene restituito l'utente inseme a un token JWT per l'autenticazione.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: Nome utente.
                password:
                  type: string
                  description: Password.
      responses:
        "200":
          description: Autenticazione riuscita.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token JWT per l'autenticazione.
                  user:
                    allOf:
                      - $ref: "#/components/schemas/UserInfo"
                    description: Informazioni sull'utente autenticato. Include nome utente, nome, cognome, ruolo e email o ufficio.
        "400":
          description: Richiesta non valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Credenziali non valide.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Errore interno del server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /users:
    get:
      tags:
        - Utenti
      summary: Restituisce la lista degli utenti
      description: >-
        Restituisce la lista degli utenti registrati. 
        Devi essere autenticato come amministratore per vedere la lista degli utenti.
      security:
        - ApiKeyAuth: []
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: Numero di utenti da saltare prima di restituire i risultati.
        - in: query
          name: limit
          schema:
            type: integer
          description: Numero massimo di utenti da restituire.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserInfo"
        "401":
          description: Non autorizzato. Devi fornire una chiave API valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Accesso negato. Devi essere un amministratore per vedere la lista degli utenti.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Errore interno del server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      tags:
        - Utenti
      summary: Crea un nuovo utente
      description: >-
        Permette l'aggiunta manuale di un nuovo utente senza la registrazione.
        Solo un amministratore può creare un nuovo utente tramite questa API. 
        L'amministratore deve fornire nome utente, nome, cognome, password, ruolo 
        e email o ufficio in base al tipo di utente (rispettivamente cittadino o amministratore).
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/Citizen"
                - $ref: "#/components/schemas/Admin"
      responses:
        "201":
          description: Utente creato con successo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    allOf:
                      - $ref: "#/components/schemas/UserInfo"
                    description: Informazioni sull'utente creato. Include nome utente, nome, cognome, ruolo e email o ufficio.
        "400":
          description: Richiesta non valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Non autorizzato. Devi fornire una chiave API valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Accesso negato. Devi essere un amministratore per creare un utente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: Nome utente o email già in uso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Errore interno del server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /users/{id}:
    delete:
      tags:
        - Utenti
      summary: Elimina un utente specifico
      description: >-
        Permette di eliminare un utente specifico in base all'ID fornito. 
        Devi essere autenticato come amministratore per eliminare un utente o essere l'utente stesso.
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID dell'utente da eliminare.
      responses:
        "204":
          description: Utente eliminato con successo.
        "401":
          description: Non autorizzato. Devi fornire una chiave API valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Accesso negato. Devi essere un amministratore per eliminare un altro utente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Utente non trovato.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Errore interno del server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /users/{id}/reports:
    get:
      tags:
        - Utenti
      summary: Restituisce la lista delle segnalazioni di un utente
      description: Restituisce la lista delle segnalazioni di un utente specifico in base all'ID fornito.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID dell'utente di cui restituire le segnalazioni.
        - in: query
          name: offset
          schema:
            type: integer
          description: Numero di segnalazioni da saltare prima di restituire i risultati.
        - in: query
          name: limit
          schema:
            type: integer
          description: Numero massimo di segnalazioni da restituire.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Report"
        "404":
          description: Utente non trovato.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Errore interno del server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /reports:
    get:
      tags:
        - Segnalazioni
      summary: Restituisce la lista delle segnalazioni
      description: Restituisce la lista delle segnalazioni.
      parameters:
        - in: query
          name: now
          schema:
            type: boolean
          description: >-
            Se fornito, filtra le segnalazioni in corso nell'ora attuale.
            Il filtro è applicato se il parametro è "true".
            Il filtro è ignorato se il parametro è "false" oppure non è un valore booleano.
            Se il parametro è "true", non può essere usato insieme a "date".
        - in: query
          name: date
          schema:
            oneOf:
              - type: string
                format: date
              - type: string
                format: date-time
          description: >-
            Se fornito, filtra le segnalazioni in corso nella data fornita.
            Non può essere usato insieme a "now".
        - in: query
          name: latitude
          schema:
            type: float
          description: Latitudine del punto attorno a cui si vuole ricercare dei cantieri.
        - in: query
          name: longitude
          schema:
            type: float
          description: Longitudine del punto attorno a cui si vuole ricercare dei cantieri.
        - in: query
          name: radius
          schema:
            type: integer
          description: Raggio del cerchio con centro il punto attorno a cui si vuole ricercare dei cantieri.
        - in: query
          name: offset
          schema:
            type: integer
          description: Numero di segnalazioni da saltare prima di restituirle.
        - in: query
          name: limit
          schema:
            type: integer
          description: Numero massimo di segnalazioni da restituire.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Report"
        "400":
          description: Richiesta non valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Errore interno del server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      tags:
        - Segnalazioni
      summary: Crea una nuova segnalazione
      description: Crea una nuova segnalazione. Devi essere loggato per poterne creare una nuova.
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Report"
      responses:
        "201":
          description: Report creato con successo.
        "401":
          description: Non autorizzato. Devi fornire una chiave API valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Errore interno del server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /reports/{id}:
    get:
      tags:
        - Segnalazioni
      summary: Restituisce una segnalazione specifica
      description: Restituisce una segnalazione specifica in base all'ID fornito.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID della segnalazione da restituire.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        "404":
          description: Segnalazione non trovata.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Errore interno del server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - Segnalazioni
      summary: Elimina una segnalazione specifica.
      description: >-
        Elimina una segnalazione specifica in base all'ID fornito. 
        Devi essere autenticato per eliminare una segnalazione.
        Se sei autenticato come amministratore, puoi eliminare qualsiasi segnalazione.
        Se sei autenticato come cittadino, puoi eliminare solo le segnalazioni che hai creato.
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID della segnalazione da eliminare.
      responses:
        "204":
          description: Segnalazione eliminata con successo.
        "401":
          description: Non autorizzato. Devi fornire una chiave API valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: >-
            Accesso negato. 
            Devi essere un amministratore per eliminare una segnalazione qualsiasi o
            un cittadino per eliminare solo le segnalazioni che hai creato.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Segnalazione non trovata.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Errore interno del server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - Segnalazioni
      summary: Modifica una segnalazione specifica.
      description:
        Permette la modifica di una segnalazione. Per modificare una segnalazione
        è necessario essere autenticati come cittadino e averla creata.
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneof:
                - $ref: "#/components/schemas/UpdateReportCitizen"
                - $ref: "#/components/schemas/UpdateReportAdmin"
      responses:
        "204":
          description: Segnalazione modificata con successo.
        "401":
          description: Non autorizzato. Devi fornire una chiave API valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: >-
            Accesso negato.
            Devi essere un amministratore per modificare questo campo.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Segnalazione non trovata.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Errore interno del server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /sites:
    get:
      tags:
        - Cantieri
      summary: Restituisce la lista dei cantieri
      description: Restituisce la lista dei cantieri.
      parameters:
        - in: query
          name: now
          schema:
            type: boolean
          description: >-
            Se fornito, filtra i cantieri in corso nell'ora attuale.
            Il filtro è applicato se il parametro è "true".
            Il filtro è ignorato se il parametro è "false" oppure non è un valore booleano.
            Se il parametro è "true", non può essere usato insieme a "date".
        - in: query
          name: date
          schema:
            oneOf:
              - type: string
                format: date
              - type: string
                format: date-time
          description: >-
            Se fornito, filtra i cantieri in corso nella data fornita.
            Non può essere usato insieme a "now".
        - in: query
          name: latitude
          schema:
            type: float
          description: Latitudine del punto attorno a cui si vuole ricercare dei cantieri.
        - in: query
          name: longitude
          schema:
            type: float
          description: Longitudine del punto attorno a cui si vuole ricercare dei cantieri.
        - in: query
          name: radius
          schema:
            type: integer
          description: Raggio del cerchio con centro il punto attorno a cui si vuole ricercare dei cantieri.
        - in: query
          name: offset
          schema:
            type: integer
          description: Numero di cantieri da saltare prima di restituire i risultati.
        - in: query
          name: limit
          schema:
            type: integer
          description: Numero massimo di cantieri da restituire.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Site"
        "400":
          description: Richiesta non valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Errore interno del server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - Cantieri
      summary: Crea un nuovo cantiere
      description: Crea un nuovo cantiere. Per creare un cantiere è necessario essere autenticati come amministratore.
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Site"
      responses:
        "201":
          description: Cantiere creato con successo.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
        "400":
          description: Richiesta non valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Non autorizzato. Devi fornire una chiave API valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Accesso negato. Devi essere un amministratore per creare un cantiere.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Errore interno del server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /sites/{id}:
    patch:
      tags:
        - Cantieri
      summary: Modifica di un cantiere
      description: Permette la modifica di un cantiere. Per modificare un cantiere è necessario essere autenticati come amministratore.
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                info:
                  type: string
                  description: Descrizione dell'evento.
                duration:
                  $ref: "#/components/schemas/Duration"
                companyName:
                  type: string
                  description: Nome dell'impresa edile che sta lavorando sul cantiere.
                realDuration:
                  $ref: "#/components/schemas/Duration"
      responses:
        "200":
          description: Cantiere modificato con successo.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
        "400":
          description: Richiesta non valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Non autorizzato. Devi fornire una chiave API valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Accesso negato. Devi essere un amministratore per creare un cantiere.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Cantiere non trovato.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Errore interno del server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      tags:
        - Cantieri
      summary: Elimina una cantiere specifico.
      description: >-
        Elimina un cantiere specifico in base all'ID fornito. 
        Devi essere autenticato come amministratore per eliminare una cantiere.
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del cantiere da eliminare
      responses:
        "204":
          description: Cantiere eliminato con successo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Messaggio di conferma dell'eliminazione.
        "400":
          description: Richiesta non valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Non autorizzato. Devi fornire una chiave API valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Accesso negato. Devi essere un amministratore per eliminare un cantiere.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Eliminazione fallita. Nessun cantiere trovato con l'ID fornito.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Errore interno del server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /geocode :
    get:
      tags:
        - 
      summary: Restituisce delle coordinate geografiche all'inserimento di un indirizzo
      description: Restituisce le coordinate geografiche dell'indirizzo inserito, per funzionare necessita di via (puó essere inserito anche il numero), cittá e codice postale della cittá.
      parameters:
        - in: query
          name: street
          schema:
            type: string
          description: Nome della via che si vuole cercare.
        - in: query
          name: city
          schema:
            type: string
          description: Nome della cittá in cui é situata la via che si vuole cercare.
        - in: query
          name: code
          schema:
            type: number
          description: Numero postale della cittá che si vuole cercare.
        - in: query
          name: stNumber
          schema:
            type: string
          description: Numero della casa che si vuole cercare.
        - in: query
          name: q
          schema:
            type: string
          description: Query che contiene le informazioni del posto che si vuole cercare.
      responses:
        "200":
          description: Ricerca effettuata con successo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  lat: latitudine del luogo ricercato.
                  lon: longitudine del luogo ricercato.
        "400":
          description: Richiesta non valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Errore interno del server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  /paths/direct:
    get:
      tags:
        - Percorsi
      summary: Restituisce un percorso diretto tra due punti
      description: >-
        Restituisce un percorso diretto tra due punti in formato GeoJSON specificati dalle coordinate geografiche.
        Le coordinate devono essere fornite come latitudine e longitudine.
      parameters:
        - in: query
          name: startLatitude
          required: true
          schema:
            type: number
            format: float
          description: Latitudine del punto di partenza.
        - in: query
          name: startLongitude
          required: true
          schema:
            type: number
            format: float
          description: Longitudine del punto di partenza.
        - in: query
          name: endLatitude
          required: true
          schema:
            type: number
            format: float
          description: Latitudine del punto di arrivo.
        - in: query
          name: endLongitude
          required: true
          schema:
            type: number
            format: float
          description: Longitudine del punto di arrivo.
      responses:
        "200":
          description: OK. Percorso trovato.
          content:
            application/geo+json:
              schema:
                type: object
        "400":
          description: Richiesta non valida.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Errore interno del server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: >-
        Chiave API per l'autenticazione.
        Deve essere fornita nell'intestazione della richiesta.
        Deve essere un token JWT valido.

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Messaggio di errore.
        code:
          type: integer
          description: Codice di errore.
        message:
          type: string
          description: Messaggio di errore dettagliato.

    User:
      type: object
      required:
        - username
        - name
        - surname
        - password
      properties:
        id:
          type: integer
          description: ID dell'utente (generato automaticamente dal server).
        username:
          type: string
          description: Nome utente.
        name:
          type: string
          description: Nome dell'utente.
        surname:
          type: string
          description: Cognome dell'utente.
        password:
          type: string
          description: Password dell'utente.
        role:
          type: string
          enum:
            - citizen
            - admin
          description: Ruolo dell'utente (cittadino o amministratore, assegnato automaticamente alla registrazione).

    Citizen:
      allOf:
        - $ref: "#/components/schemas/User"
        - type: object
          required:
            - email
          properties:
            email:
              type: string
              format: email
              description: Indirizzo email del cittadino.

    Admin:
      allOf:
        - $ref: "#/components/schemas/User"
        - type: object
          required:
            - office
          properties:
            office:
              type: string
              description: ufficio di competenza dell'amministratore.

    UserInfo:
      type: object
      required:
        - username
        - name
        - surname
        - role
      properties:
        username:
          type: string
          description: Nome utente.
        name:
          type: string
          description: Nome dell'utente.
        surname:
          type: string
          description: Cognome dell'utente.
        role:
          type: string
          enum:
            - citizen
            - admin
          description: Ruolo dell'utente.
      oneOf:
        - required: [email]
          properties:
            email:
              type: string
              format: email
              description: Indirizzo email del cittadino.
        - required: [office]
          properties:
            office:
              type: string
              description: Ufficio di competenza dell'amministratore.

    Location:
      type: object
      required:
        - latitude
        - longitude
        - street
        - number
        - city
        - code
      properties:
        latitude:
          type: number
          format: float
          description: Latitudine della posizione.
          minimum: -90
          maximum: 90
        longitude:
          type: number
          format: float
          description: Longitudine della posizione.
          minimum: -180
          maximum: 180
        street:
          type: string
          description: Nome della strada.
        number:
          type: string
          description: Numero civico.
        city:
          type: string
          description: Nome della città.
        code:
          type: string
          minLength: 5
          maxLength: 5
          description: Codice di Avviamento Postale.

    Duration:
      type: object
      required:
        - start
      properties:
        start:
          type: string
          format: date-time
          description: Data e ora di inizio dell'evento.
        end:
          type: string
          format: date-time
          description: Data e ora di fine dell'evento.

    Comment:
      type: object
      required:
        - userId
        - text
      properties:
        id:
          type: integer
          description: ID del commento (generato automaticamente dal server).
        userId:
          type: integer
          description: ID dell'utente che ha scritto il commento.
        text:
          type: string
          description: Testo del commento.
        createdAt:
          type: string
          format: date-time
          description: Data e ora di creazione del commento.

    Event:
      type: object
      required:
        - name
        - info
        - location
        - duration
      properties:
        id:
          type: integer
          description: ID dell'evento (generato automaticamente dal server).
        name:
          type: string
          description: Nome dell'evento.
        info:
          type: string
          description: Descrizione dell'evento.
        location:
          allOf:
            - $ref: "#/components/schemas/Location"
          description: Posizione dell'evento.
        duration:
          allOf:
            - $ref: "#/components/schemas/Duration"
          description: Durata dell'evento.
        createdAt:
          type: string
          format: date-time
          description: Data e ora di creazione dell'evento (ora attuale se non specificata).
        comments:
          type: array
          items:
            $ref: "#/components/schemas/Comment"
          description: Lista dei commenti associati all'evento.

    Report:
      allOf:
        - $ref: "#/components/schemas/Event"
        - type: object
          properties:
            createdBy:
              type: integer
              description: ID dell'utente che ha creato la segnalazione.
            photos:
              type: array
              items:
                type: string
                format: uri
              description: Lista degli URL delle foto associate alla segnalazione.
            rating:
              type: integer
              description: Punteggio della segnalazione (impostato a 0 per una nuova segnalazione).
            status:
              type: string
              enum:
                - pending
                - approved
                - rejected
                - solved
              description: Stato della segnalazione.

    UpdateReportCitizen:
      type: object
      properties:
        name:
          type: string
          description: Nome dell'evento.
        info:
          type: string
          description: Descrizione dell'evento.
        duration:
          allOf:
            - $ref: "#/components/schemas/Duration"
          description: Durata dell'evento.
        photos:
          type: array
          items:
            type: string
            format: uri
          description: Lista degli URL delle foto associate alla segnalazione.

    UpdateReportAdmin:
      type: object
      properties:
        status:
          type: string
          enum:
            - pending
            - approved
            - rejected
            - solved
          description: Stato della segnalazione.

    Site:
      allOf:
        - $ref: "#/components/schemas/Event"
        - type: object
          required:
            - companyName
          properties:
            companyName:
              type: string
              description: Nome dell'impresa edile che sta lavorando sul cantiere.
            realDuration:
              allOf:
                - $ref: "#/components/schemas/Duration"
              description: Durata reale del cantiere, puó divergere da quella inserita alla creazione del cantiere.
