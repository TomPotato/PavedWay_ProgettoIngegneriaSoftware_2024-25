# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
permissions:
  contents: write
  pull-requests: write
  actions: write
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['23.x']

    environment: production

    env: 
      PORT: ${{ secrets.PORT }}
      DB_URI: ${{ secrets.DB_URI }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_TEST: ${{ secrets.DB_TEST }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      ORS_API_KEY: ${{ secrets.ORS_API_KEY }}      
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: Backend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      working-directory: Backend

    - name: Build
      run: npm run build --if-present
      working-directory: Backend

    - name: Test
      run: npm test
      working-directory: Backend
  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Trigger Render deploy
        run: |
          curl -X POST https://api.render.com/v1/services/${{ secrets.RENDER_ID }}/deploys \
          -H "Authorization: Bearer ${{ secrets.RENDER_TOKEN }}" \
          -H "Content-Type: application/json"
      - name: Wait for Render Deployment
        uses: bounceapp/render-action@0.6.0
        with:
         render-token: ${{ secrets.RENDER_TOKEN }}
         github-token: ${{ secrets.PERSONAL_GH_TOKEN }}
         service-id: ${{ secrets.RENDER_ID }}
         retries: 20
         wait: 16000
         sleep: 30000
